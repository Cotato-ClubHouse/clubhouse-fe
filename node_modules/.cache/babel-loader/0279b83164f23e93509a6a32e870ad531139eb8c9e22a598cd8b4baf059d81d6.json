{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      username: \"\"\n    };\n  },\n  methods: {\n    async signup() {\n      const url = \"http://localhost:8080/v1/users/join\";\n      const data = {\n        email: this.email,\n        password: this.password,\n        username: this.username\n      };\n      await axios({\n        method: \"post\",\n        url,\n        data\n      }).then(() => {\n        console.log(data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async login() {\n      const url = \"http://localhost:8080/v1/users/login\";\n      const data = {\n        email: this.email,\n        password: this.password\n      };\n      try {\n        const response = await axios.post(url, data);\n\n        // 헤더에서 accessToken 값 가져오기\n        const accessToken = response.headers['accesstoken']; // 헤더 이름이 대소문자 구분을 하지 않는 경우도 있으니 주의하세요.\n\n        // 토큰 값을 저장하거나 다른 작업 수행\n        this.$store.commit(\"setToken\", {\n          token: accessToken\n        });\n        console.log(this.$store.getters.getToken);\n        console.log(response.headers);\n        // 이후 처리 (예: 라우터 이동)\n        this.$router.push(\"/\");\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    /*\n    async login(){\n      const url = \"http://localhost:8080/v1/users/login\"\n      const data = {\n        email : this.email,\n        password : this.password\n      };\n       // try{\n      //   const response = await axios.post(url, data);\n      //   const accessToken = response.headers['accessToken'];\n      //   this.$store.commit(\"setToken\", {token: accessToken});\n        \n      // }catch(e){\n      //   console.log(e)\n      // }\n      \n      await axios({\n        method : \"post\",\n        url,\n        data\n      })\n      .then((res) => {\n        const accessToken = res.headers['Set-Cookie']; // 응답 헤더에서 accessToken 값 가져오기\n        this.$store.commit(\"setToken\", { token: accessToken });\n        console.log(res.headers)\n        this.$router.push(\"/\")\n      })\n      .catch((e) => {\n        console.log(e)\n      }) \n    }*/\n  }\n};","map":{"version":3,"names":["axios","data","email","password","username","methods","signup","url","method","then","console","log","catch","e","login","response","post","accessToken","headers","$store","commit","token","getters","getToken","$router","push","error"],"sources":["/Users/kimdohyung/work_vue/clubhouse/src/views/JoinAndLoginView.vue"],"sourcesContent":["<template>\n<div class=\"login-wrap\">\n  <div class=\"login-html\">\n    <input id=\"tab-1\" type=\"radio\" name=\"tab\" class=\"sign-in\" checked><label for=\"tab-1\" class=\"tab\">Sign In</label>\n    <input id=\"tab-2\" type=\"radio\" name=\"tab\" class=\"sign-up\"><label for=\"tab-2\" class=\"tab\">Sign Up</label>\n    <div class=\"login-form\">\n      <div class=\"sign-in-htm\">\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">Email</label>\n          <input id=\"user\" type=\"text\" class=\"input\" v-model=\"email\">\n        </div>\n        <div class=\"group\">\n          <label for=\"pass\" class=\"label\">Password</label>\n          <input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\" v-model=\"password\">\n        </div>\n        <!--\n        <div class=\"group\">\n          <input id=\"check\" type=\"checkbox\" class=\"check\" checked>\n          <label for=\"check\"><span class=\"icon\"></span> Keep me Signed in</label>\n        </div> -->\n        <div class=\"group\">\n          <input type=\"submit\" class=\"button\" value=\"Sign In\" @click.prevent=\"login\">\n        </div>\n        <div class=\"hr\"></div>\n        <!--\n        <div class=\"foot-lnk\">\n          <a href=\"#forgot\">Forgot Password?</a>\n        </div> -->\n      </div>\n\n      <div class=\"sign-up-htm\">\n        <div class=\"group\">\n          <label for=\"user\" class=\"label\">Username</label>\n          <input id=\"user\" type=\"text\" class=\"input\" v-model=\"username\">\n        </div>\n        <div class=\"group\">\n          <label for=\"pass\" class=\"label\">Password</label>\n          <input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\" v-model=\"password\">\n        </div>\n        <!--\n        <div class=\"group\">\n          <label for=\"pass\" class=\"label\">Repeat Password</label>\n          <input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\">\n        </div> -->\n        <div class=\"group\">\n          <label for=\"pass\" class=\"label\">Email Address</label>\n          <input id=\"pass\" type=\"text\" class=\"input\" v-model=\"email\">\n        </div>\n        <div class=\"group\">\n          <input type=\"submit\" class=\"button\" value=\"Sign Up\" @click.prevent = \"signup\">\n        </div>\n        <div class=\"hr\"></div>\n        <div class=\"foot-lnk\">\n          <label for=\"tab-1\">Already Member?</label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\n  export default{\n    data(){\n      return {\n        email : \"\",\n        password : \"\",\n        username : \"\"\n      };\n    },\n    methods: {\n      async signup(){\n        const url = \"http://localhost:8080/v1/users/join\";\n        const data = {\n          email : this.email,\n          password : this.password,\n          username : this.username\n        };\n        await axios({\n          method : \"post\",\n          url,\n          data\n        })\n        .then(() => {\n        console.log(data)\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n      },\n\n      async login() {\n  const url = \"http://localhost:8080/v1/users/login\";\n  const data = {\n    email: this.email,\n    password: this.password\n  };\n\n  try {\n    const response = await axios.post(url, data);\n    \n    // 헤더에서 accessToken 값 가져오기\n    const accessToken = response.headers['accesstoken']; // 헤더 이름이 대소문자 구분을 하지 않는 경우도 있으니 주의하세요.\n\n    // 토큰 값을 저장하거나 다른 작업 수행\n    this.$store.commit(\"setToken\", { token: accessToken });\n    console.log(this.$store.getters.getToken)\n    console.log(response.headers)\n    // 이후 처리 (예: 라우터 이동)\n    this.$router.push(\"/\");\n  } catch (error) {\n    console.error(error);\n  }\n}\n      /*\n      async login(){\n        const url = \"http://localhost:8080/v1/users/login\"\n        const data = {\n          email : this.email,\n          password : this.password\n        };\n\n        // try{\n        //   const response = await axios.post(url, data);\n        //   const accessToken = response.headers['accessToken'];\n        //   this.$store.commit(\"setToken\", {token: accessToken});\n          \n        // }catch(e){\n        //   console.log(e)\n        // }\n        \n        await axios({\n          method : \"post\",\n          url,\n          data\n        })\n        .then((res) => {\n          const accessToken = res.headers['Set-Cookie']; // 응답 헤더에서 accessToken 값 가져오기\n          this.$store.commit(\"setToken\", { token: accessToken });\n          console.log(res.headers)\n          this.$router.push(\"/\")\n        })\n        .catch((e) => {\n          console.log(e)\n        }) \n      }*/\n    }\n  }\n\n</script>\n\n<style>\nbody{\n  margin:0;\n  color:#6a6f8c;\n  background:#c8c8c8;\n  font:600 16px/18px 'Open Sans',sans-serif;\n}\n*,:after,:before{box-sizing:border-box}\n.clearfix:after,.clearfix:before{content:'';display:table}\n.clearfix:after{clear:both;display:block}\na{color:inherit;text-decoration:none}\n\n.login-wrap{\n  width:100%;\n  margin:auto;\n  max-width:525px;\n  min-height:670px;\n  position:relative;\n  background:url(https://raw.githubusercontent.com/khadkamhn/day-01-login-form/master/img/bg.jpg) no-repeat center;\n  box-shadow:0 12px 15px 0 rgba(0,0,0,.24),0 17px 50px 0 rgba(0,0,0,.19);\n}\n.login-html{\n  width:100%;\n  height:100%;\n  position:absolute;\n  padding:90px 70px 50px 70px;\n  background:rgba(22, 55, 81, 0.9);\n}\n.login-html .sign-in-htm,\n.login-html .sign-up-htm{\n  top:0;\n  left:0;\n  right:0;\n  bottom:0;\n  position:absolute;\n  transform:rotateY(180deg);\n  backface-visibility:hidden;\n  transition:all .4s linear;\n}\n.login-html .sign-in,\n.login-html .sign-up,\n.login-form .group .check{\n  display:none;\n}\n.login-html .tab,\n.login-form .group .label,\n.login-form .group .button{\n  text-transform:uppercase;\n}\n.login-html .tab{\n  font-size:22px;\n  margin-right:15px;\n  padding-bottom:5px;\n  margin:0 15px 10px 0;\n  display:inline-block;\n  border-bottom:2px solid transparent;\n}\n.login-html .sign-in:checked + .tab,\n.login-html .sign-up:checked + .tab{\n  color:#fff;\n  border-color:#1161ee;\n}\n.login-form{\n  min-height:345px;\n  position:relative;\n  perspective:1000px;\n  transform-style:preserve-3d;\n}\n.login-form .group{\n  margin-bottom:15px;\n}\n.login-form .group .label,\n.login-form .group .input,\n.login-form .group .button{\n  width:100%;\n  color:#fff;\n  display:block;\n}\n.login-form .group .input,\n.login-form .group .button{\n  border:none;\n  padding:15px 20px;\n  border-radius:25px;\n  background:rgba(255,255,255,.1);\n}\n.login-form .group input[data-type=\"password\"]{\n  text-security:circle;\n  -webkit-text-security:circle;\n}\n.login-form .group .label{\n  color:#aaa;\n  font-size:12px;\n}\n.login-form .group .button{\n  background:#1161ee;\n}\n.login-form .group label .icon{\n  width:15px;\n  height:15px;\n  border-radius:2px;\n  position:relative;\n  display:inline-block;\n  \n}\n.login-form .group label .icon:before,\n.login-form .group label .icon:after{\n  content:'';\n  width:10px;\n  height:2px;\n  background:#fff;\n  position:absolute;\n  transition:all .2s ease-in-out 0s;\n}\n.login-form .group label .icon:before{\n  left:3px;\n  width:5px;\n  bottom:6px;\n  transform:scale(0) rotate(0);\n}\n.login-form .group label .icon:after{\n  top:6px;\n  right:0;\n  transform:scale(0) rotate(0);\n}\n.login-form .group .check:checked + label{\n  color:#fff;\n}\n.login-form .group .check:checked + label .icon{\n  background:#1161ee;\n}\n.login-form .group .check:checked + label .icon:before{\n  transform:scale(1) rotate(45deg);\n}\n.login-form .group .check:checked + label .icon:after{\n  transform:scale(1) rotate(-45deg);\n}\n.login-html .sign-in:checked + .tab + .sign-up + .tab + .login-form .sign-in-htm{\n  transform:rotate(0);\n}\n.login-html .sign-up:checked + .tab + .login-form .sign-up-htm{\n  transform:rotate(0);\n}\n\n.hr{\n  height:2px;\n  margin:60px 0 50px 0;\n  background:rgba(255,255,255,.2);\n}\n.foot-lnk{\n  text-align:center;\n}\n\n</style>\n\n"],"mappings":";AA8DA,OAAOA,KAAI,MAAO,OAAO;AAEvB,eAAc;EACZC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,KAAI,EAAI,EAAE;MACVC,QAAO,EAAI,EAAE;MACbC,QAAO,EAAI;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAE;MACZ,MAAMC,GAAE,GAAI,qCAAqC;MACjD,MAAMN,IAAG,GAAI;QACXC,KAAI,EAAI,IAAI,CAACA,KAAK;QAClBC,QAAO,EAAI,IAAI,CAACA,QAAQ;QACxBC,QAAO,EAAI,IAAI,CAACA;MAClB,CAAC;MACD,MAAMJ,KAAK,CAAC;QACVQ,MAAK,EAAI,MAAM;QACfD,GAAG;QACHN;MACF,CAAC,EACAQ,IAAI,CAAC,MAAM;QACZC,OAAO,CAACC,GAAG,CAACV,IAAI;MAChB,CAAC,EACAW,KAAK,CAAEC,CAAC,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,CAAC;MACf,CAAC;IACH,CAAC;IAED,MAAMC,KAAKA,CAAA,EAAG;MAClB,MAAMP,GAAE,GAAI,sCAAsC;MAClD,MAAMN,IAAG,GAAI;QACXC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MAED,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAACT,GAAG,EAAEN,IAAI,CAAC;;QAE5C;QACA,MAAMgB,WAAU,GAAIF,QAAQ,CAACG,OAAO,CAAC,aAAa,CAAC,EAAE;;QAErD;QACA,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,UAAU,EAAE;UAAEC,KAAK,EAAEJ;QAAY,CAAC,CAAC;QACtDP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,MAAM,CAACG,OAAO,CAACC,QAAQ;QACxCb,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACG,OAAO;QAC5B;QACA,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdhB,OAAO,CAACgB,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;IACM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgCF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}